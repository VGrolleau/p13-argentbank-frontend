swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  # User Module
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  # User Transactions
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User accounts
      description: API for getting all user accounts
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: All user accounts getting successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User accounts
      description: API for getting a user account with its id
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountId
          description: User's account Id
          type: integer
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Clicked user account getting successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /transactions:
    # TODO: completer avec date (anneeMois) dans body, décrire dans description que c'est facultatif et préciser les cas possibles
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User transactions
      description: API for getting all account user transactions
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Get all account user transactions by date (yearMonth), can do with no date, only year, or year and month
          required: false
          schema:
            $ref: '#/definitions/Transactions'
      produces:
        - application/json
      responses:
        '200':
          description: All user's transactions of an account getting successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    post:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User transaction
      description: API for creating an account user transaction
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: User transaction Id
          type: integer
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Request OK
          schema:
            $ref: '#/definitions/ApiResponse'
        '201':
          description: A user transaction of an account creating successfully
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User transaction
      description: API for getting an account user transaction
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: User transaction Id
          type: integer
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: A user transaction of an account getting successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User transaction
      description: API for modify a transaction category and note
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: User transaction Id
          type: integer
          required: true
        - in: body
          name: body
          description: Update transaction
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Category and note of a transaction modify successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User transaction
      description: API for deleting an account user transaction
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: User transaction Id
          type: integer
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: A user transaction of an account deleting successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Transactions:
    type: object
    properties:
      month:
        type: number
        description: current month
      year:
        type: number
        description: current year

  Transaction:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
